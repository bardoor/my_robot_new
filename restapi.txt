Прежде чем сервер начнет выполнение комманд, ему необходимо послать запрос на инициализацию,
в данном запросе содержится PID, по которому сервер отслеживает, закончил ли клиент посылку команд.

Запрос на инициализацию выглядит так:

{
    "command": "init",
    "pid": <id процесса клиента>
}

Например,

{
    "command": "initialize",
    "pid": 123
}

В ответ на данный запрос сервер возвращает следующий JSON:

{
    "status": "initialized"
}

В случае, если попытаться послать любую другую команду, сервер вернет ответ

{
    "status": "not initialized"
}

не выполнив никакой команды.

Каждый игровой запрос клиента выглядит как:

{
    "command": <название команды>,
    <дополнительные аргументы команды, если они есть>
}

Возвращаемый ответ сервера выглядит как:

{
    "status": "executed" или "blocked",
    <дополнительные значения, если команда возвращает какой-то результат>
}

Если status == "executed", это значит, что команда была успешно выполнена.
Если status == "blocked", это значит, что выполнить команду невозможно.

Формат json-запросов, посылаемых клиентом:

Команды:

1) Закраска клетки:

{
    "command": "paint"
}

Возвращаемый ответ:

{
    "status": "executed"
}

2) Шаг

{
    "command": "step",
    "direction": "north"
}

Возвращаемый ответ:

{
    "status": "executed",
}

или

{
    "status": "blocked",
}

3) Проверка наличия стены

{
    "command": "is_wall",
    "direction": "south"
}

Возвращаемый ответ:

{
    "status": "executed",
    "result": "true"
}

или

{
    "status": "executed",
    "result": "false"
}

В случае, если робот разбился, на любой запрос возвращается ответ

{
    "status": "blocked"
}